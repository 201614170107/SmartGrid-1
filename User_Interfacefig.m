function varargout = User_Interfacefig(varargin)
% USER_INTERFACEFIG MATLAB code for User_Interfacefig.fig
%      USER_INTERFACEFIG, by itself, creates a new USER_INTERFACEFIG or raises the existing
%      singleton*.
%
%      H = USER_INTERFACEFIG returns the handle to a new USER_INTERFACEFIG or the handle to
%      the existing singleton*.
%
%      USER_INTERFACEFIG('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in USER_INTERFACEFIG.M with the given input arguments.
%
%      USER_INTERFACEFIG('Property','Value',...) creates a new USER_INTERFACEFIG or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before User_Interfacefig_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to User_Interfacefig_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help User_Interfacefig

% Last Modified by GUIDE v2.5 17-Mar-2015 14:04:23

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @User_Interfacefig_OpeningFcn, ...
                   'gui_OutputFcn',  @User_Interfacefig_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before User_Interfacefig is made visible.
function User_Interfacefig_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to User_Interfacefig (see VARARGIN)

% Choose default command line output for User_Interfacefig
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes User_Interfacefig wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = User_Interfacefig_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes during object creation, after setting all properties.
function V_COST1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to V_COST1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called


% --- Executes during object creation, after setting all properties.
function V_COST2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to V_COST2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% load small data
% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDAT)
%%%%%%%------------------------------------------------------------
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Stuff\Downloads\MS BSAN\Quarter 2\OPR
%    620\Project\test\Data.xlsx Worksheet: Small
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2015/03/15 18:38:32

%% Import the data
[~, ~, raw] = xlsread('C:\Stuff\Downloads\MS BSAN\Quarter 2\OPR 620\Project\test\Data.xlsx','Small','A2:H4');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,1);
raw = raw(:,[2,3,4,5,6,7,8]);

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Appliance = cellVectors(:,1);
Job = data(:,1);
RequestHour = data(:,2);
Duration = data(:,3);
StartHour = data(:,4);
DelayCost = data(:,5);
PowerCost = data(:,6);
TotalCost = data(:,7);

%% Clear temporary variables
clearvars data raw cellVectors
%%%%%%%5555555555555555555555555555555555555555555555555555555555555

Schedule = [Appliance	num2cell([Job	RequestHour	Duration	StartHour	DelayCost	PowerCost	TotalCost])];
set(handles.uitable1,'data',Schedule);
set(handles.pushbutton4,'Visible','On');

% solve button
% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% without scheduling
set(handles.edit3,'String','100');
%with scheduling
set(handles.edit4,'String','200');
%savings
set(handles.edit5,'String','100');

% display graph button
% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
active = get(hObject,'Value');
if active
    set(handles.axes2,'Visible','On');
    set(hObject,'String','Hide Graph');
else
    set(handles.axes2,'Visible','Off');
    set(hObject,'String','Display Graph');
end

% reset button
% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
%reset values
set(handles.uitable1,'data',[]);
set(handles.axes2,'Visible','Off');
set(handles.pushbutton4,'Visible','Off');
set(handles.pushbutton3,'String','Display Graph');
% without scheduling
set(handles.edit3,'String','');
%with scheduling
set(handles.edit4,'String','');
%savings
set(handles.edit5,'String','');
%total power
set(handles.edit6,'String','');
%power utilized
set(handles.edit7,'String','');
%set slider vallue to zero
set(handles.slider1,'Value',0);

function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit5_Callback(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit5 as text
%        str2double(get(hObject,'String')) returns contents of edit5 as a double


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% load large data
% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Stuff\Downloads\MS BSAN\Quarter 2\OPR
%    620\Project\test\Data.xlsx Worksheet: Large
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2015/03/17 00:55:59

%% Import the data
[~, ~, raw] = xlsread('C:\Stuff\Downloads\MS BSAN\Quarter 2\OPR 620\Project\test\Data.xlsx','Large','A2:H13');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,1);
raw = raw(:,[2,3,4,5,6,7,8]);

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Appliance = cellVectors(:,1);
Job = data(:,1);
RequestHour = data(:,2);
Duration = data(:,3);
StartHour = data(:,4);
DelayCost = data(:,5);
PowerCost = data(:,6);
TotalCost = data(:,7);

%% Clear temporary variables
clearvars data raw cellVectors;

Schedule = [Appliance	num2cell([Job	RequestHour	Duration	StartHour	DelayCost	PowerCost	TotalCost])];
set(handles.uitable1,'data',Schedule);
set(handles.pushbutton4,'Visible','On');



function edit6_Callback(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit6 as text
%        str2double(get(hObject,'String')) returns contents of edit6 as a double


% --- Executes during object creation, after setting all properties.
function edit6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit7_Callback(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit7 as text
%        str2double(get(hObject,'String')) returns contents of edit7 as a double


% --- Executes during object creation, after setting all properties.
function edit7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on slider movement.
function slider1_Callback(hObject, eventdata, handles)
% hObject    handle to slider1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider
power=get(hObject,'Value');
power=round(power);
set(handles.edit6,'String',power);

% --- Executes during object creation, after setting all properties.
function slider1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to slider1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end
